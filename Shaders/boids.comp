#version 460 core

precision highp float;

// Create a lookAt matrix from a position, direction, and up vector. Taken from GLM
mat4 lookAt(vec3 pos, vec3 dir, vec3 up) {
    vec3 f = normalize(dir - pos);
    vec3 s = normalize(cross(f, up));
    vec3 u = cross(s, f);

    mat4 m = mat4(1);
    m[0][0] = s.x;
    m[1][0] = s.y;
    m[2][0] = s.z;
    m[0][1] = u.x;
    m[1][1] = u.y;
    m[2][1] = u.z;
    m[0][2] =-f.x;
    m[1][2] =-f.y;
    m[2][2] =-f.z;
    m[3][0] =-dot(s, pos);
    m[3][1] =-dot(u, pos);
    m[3][2] = dot(f, pos);
    return m;
}

struct Boid {
    vec4 pos;
    vec4 velocity;
    vec4 lastVelocity;
    vec4 home;
    vec2 bounds;
    float min_speed;
    float max_speed;
    float minSepDistance;
    float matchingFactor;
    float centeringFactor;
    float avoidFactor;
    float minEnemyInterceptDistance;
    float minEnemyChaseDistance;
    float fearWeight;
    float goalWeight;
    int canHaveHome;
    int hasHome;
    uint myPredators[12];
    uint myPrey[12];
    uint type;
    uint ID;
};

